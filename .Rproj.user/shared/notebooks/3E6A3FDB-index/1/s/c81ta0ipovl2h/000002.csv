"0","# Let’s make a final workflow, and then fit one last time, using the convenience function"
"0","# last_fit(). This function fits a final model on the entire training set and evaluates on"
"0","# the testing set. We just need to give this funtion our original train/test split."
"0",""
"0","final_wf <- workflow() %>%"
"0","  add_recipe(rf_recipe) %>%"
"0","  add_model(final_rf)"
"0",""
"0",""
"0","final_model <- final_wf %>%"
"0","  last_fit(data_split)"
"0",""
"0",""
"0","# final_model %>%"
"0","#  collect_metrics()"
"0",""
"0",""
"0","# The metrics for the test set look good and indicate we did not overfit during tuning."
"0","# Let’s bind our testing results back to the original test set, and make one more map. "
"0","# Where in San Francisco are there more or less incorrectly predicted trees?"
"0","  "
"0","#   final_model %>%"
"0","#   collect_predictions() %>%"
"0","#  mutate(correct = case_when("
"0","#    Churn == .pred_class ~ ""Correct"","
"0","#     TRUE ~ ""Incorrect"""
"0","#   )) %>%"
"0","#   bind_cols(testing_data)  "
"0","   "
"0","  "
"0",""
"0","# Confussion matrix"
"0","final_model %>% "
"0","  collect_predictions() %>% "
"0","  conf_mat(Churn, .pred_class)"
"1","          Truth
"
"1","Prediction"
"1"," FALSE"
"1"," TRUE"
"1","
     FALSE"
"1","   702"
"1","   21"
"1","
     TRUE "
"1","    17"
"1","   93"
"1","
"
"0"," "
"0",""
"0","final_model %>%"
"0","  collect_predictions() %>%"
"0","  roc_curve(Churn, .pred_TRUE) %>%"
"0","  ggplot(aes(x = 1 - specificity, y = sensitivity)) +"
"0","  geom_line(size = 1.5, color = ""midnightblue"") +"
"0","  geom_abline("
"0","    lty = 2, alpha = 0.5,"
"0","    color = ""gray50"","
"0","    size = 1.2"
"0","  ) +"
"0","  theme_minimal()"
